# ==============================================================================
# Script: Ca_Stock_Slope_ByStreamDate.R
# Description: Fits calcium stock change (g/mÂ²) over time (hours),
#              grouped by stream, daytime, and sampling date.
# ==============================================================================

# ---- Load Required Libraries ----
library(dplyr) 

# ---- Load Data ----
df <- read.csv("./data/Ca_Stock_Variation_LinearSegments.csv", sep = ",", header = TRUE)

# ---- Ensure sampling_datetime is Date or POSIXct ----
df$sampling_datetime <- as.POSIXct(df$sampling_datetime, format = "%Y-%m-%d %H:%M:%S")

# ---- Extract only Date (remove time) ----
df$date <- as.Date(df$sampling_datetime)

# ---- Check Data ----
str(df)
summary(df)

# ---- Function to Fit Models by Stream, Daytime, and Date ----
create_linear_models <- function(df) {
  model_results <- data.frame()
  
  # Unique combinations
  combinations <- df %>%
    dplyr::select(stream, daytime, date) %>%
    distinct()
  
  for (i in 1:nrow(combinations)) {
    subset_df <- df %>%
      filter(stream == combinations$stream[i],
             daytime == combinations$daytime[i],
             date == combinations$date[i])
    
    # Proceed only if time has variation and values are present
    if (length(unique(subset_df$diff_h)) > 1 && all(!is.na(subset_df$calcium_g_m2))) {
      lm_model <- lm(calcium_g_m2 ~ diff_h, data = subset_df)
      model_summary <- summary(lm_model)
      coef_table <- coef(model_summary)
      
      # Store results
      result <- data.frame(
        Stream = combinations$stream[i],
        Daytime = combinations$daytime[i],
        Date = combinations$date[i],
        Slope = coef_table["diff_h", "Estimate"],
        Intercept = coef_table["(Intercept)", "Estimate"],
        Slope_Std_Error = coef_table["diff_h", "Std. Error"],
        Intercept_Std_Error = coef_table["(Intercept)", "Std. Error"],
        R_Squared = model_summary$r.squared,
        Adjusted_R_Squared = model_summary$adj.r.squared,
        F_Statistic = model_summary$fstatistic[1],
        P_Value = coef_table["diff_h", "Pr(>|t|)"],
        Residual_Std_Error = model_summary$sigma
      )
      
      model_results <- rbind(model_results, result)
    }
  }
  
  return(model_results)
}

# ---- Run Function ----
slope_by_stream_date <- create_linear_models(df)

# ---- View Output ----
print(slope_by_stream_date)

# ---- Save Results ----
write.csv(slope_by_stream_date, "./results/Ca_Stock_Slope_by_StreamDate.csv", row.names = FALSE)