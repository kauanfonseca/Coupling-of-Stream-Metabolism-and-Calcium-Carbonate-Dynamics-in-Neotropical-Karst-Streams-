# ---- Evaluation of Ecosystem Metabolism on Travertine Formation ----

# ---- Packages ----
library(ggplot2)
library(ggpubr)
library(cowplot)
library(scales)
library(lmerTest)
library(dplyr)
library(performance)
library(broom)
library(openxlsx)

# ---- Data ----
df <- read.csv("./data/streamMetabolism_TravertineFormation_Data.csv")
df$stream <- as.factor(df$stream)
attach(df)
#df <- df %>%
arrange(Travertine == "Non-active") %>%
  mutate(Row = row_number()) %>%
  select(Row, everything())

#---- Gross primary production effect on Ca flux ---- 

# ---- Model deposition rates ----
# Model using all data points for GPP

modelGPP_all_molar <- lm(log10(abs(daytime_caco3_flux_mol_m2_d)) ~ log10(gpp_mol_c_m2_d), data = df[c(-1),]) #By removing RA measurement from 2023-09-01 since it's an outiler, we also remove SR 2023-10-09 as this measurment become an outiler give a slop of 0.9. However, when we remove only the SR, we keep the same results, therefore in order to preserve the sampled size we only remove SR 2023-10-09.
modelGPP_all_molar
check_model(modelGPP_all_molar)


GPP_Ca <- ggplot(df[-2, ], aes(x = gpp_mol_c_m2_d, y = abs(daytime_caco3_flux_mol_m2_d))) +
  geom_errorbarh(aes(xmin = gpp_mol_c_m2_d - gpp_mol_c_m2_d_sd,
                     xmax = gpp_mol_c_m2_d + gpp_mol_c_m2_d_sd,
                     color = stream),
                 height = 0.04, alpha = 0.4, linewidth = 0.7) +
  geom_errorbar(aes(ymin = abs(daytime_caco3_flux_mol_m2_d) - daytime_caco3_flux_mol_m2_d_sd,
                    ymax = abs(daytime_caco3_flux_mol_m2_d) + daytime_caco3_flux_mol_m2_d_sd,
                    color = stream),
                width = 0.04, alpha = 0.4, linewidth = 0.7) +
  geom_abline(intercept = 0.8752, slope = 0.9580, linewidth = 1) +
  geom_point(aes(colour = stream, shape = stream, fill = stream),
             size = 3.5, stroke = 1.5, alpha = .7) +
  labs(title = "a", fill = "Stream", color = "Stream", shape = "Stream") +
  scale_shape_manual(values = c(21:24)) +
  scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill")) +
  stat_regline_equation(label.y = log10(0.06), label.x = log10(0.015),
                        aes(label = paste("y == 1.13 + 0.96 * x", "~~", "R^2 == 0.6")),
                        parse = TRUE) +
  scale_x_log10(name = expression(Gross~primary~production~(mol~C~m^{"-2"}~d^{"-1"}))) +
  scale_y_log10(name = expression("|"~Deposition~rates~"|"~(mol~CaCO[3]~m^{"-2"}~d^{"-1"}))) +
  theme_cowplot(font_size = 16, line_size = 0.5) +
  theme(legend.position = c(.05, .8)) +
  panel_border(color = "black", size = 1) +
  update_geom_defaults("text", list(size = 5))


GPP_Ca


# ---- Model for calcium accrual ----
#caa = calcium accrual


grams_to_mol <- function(grams) {
  molar_mass_Ca <- 40.08  # g/mol
  mol <- grams / molar_mass_Ca
  return(mol)
}

modelGPP_caa <- lm((log10(grams_to_mol(daytime_ca_standing_stock_g_m2)) ~ log10(gpp_mol_c_m2_d)), df[c(-1:-3),]) #we removed RA 2023-09-01; and all SR measurements since were outliers

check_model(modelGPP_caa)

summary(modelGPP_caa)

#---- Plot for calcium accrual----

GPP_Caa <- ggplot(df, aes(x = gpp_mol_c_m2_d, y = daytime_ca_standing_stock_g_m2)) +
  geom_errorbarh(aes(xmin = gpp_mol_c_m2_d - gpp_mol_c_m2_d_sd,
                     xmax = gpp_mol_c_m2_d + gpp_mol_c_m2_d_sd,
                     color = stream),
                  height = 1, alpha = 0.4, linewidth = 0.7) +
  geom_errorbar(aes(ymin = daytime_ca_standing_stock_g_m2 - daytime_ca_standing_stock_g_m2_sd,
                    ymax = daytime_ca_standing_stock_g_m2 + daytime_ca_standing_stock_g_m2_sd,
                    color = stream),
                width = .01, alpha = 0.4, linewidth = 0.7) +
  geom_point(aes(colour = stream, shape = stream, fill = stream),
             size = 3.5, stroke = 1.5, alpha = .7) +
  labs(title = "b") +
  scale_shape_manual(values = c(21:24)) +
  scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill")) +
  scale_x_continuous(name = expression(Gross~primary~production~(mol~C~m^{"-2"}~d^{"-1"}))) +
  scale_y_continuous(name = expression(Stock~of~Calcium[~daytime]~(mol~Ca^{"2+"}~m^{"-2"}))) +
  theme_cowplot(font_size = 16, line_size = 0.5) +
  theme(legend.position = "none") +
  panel_border(color = "black", size = 1) +
  update_geom_defaults("text", list(size = 5))

GPP_Caa


#---- Ecosystem respiration effect on Ca flux -----

# Model excluding additional sensitive points using absolute values
modelER_adj <- lm(log10(abs((nighttime_caco3_flux_mol_m2_d))) ~ log10((er_mol_c_m2_d)), df[c(-9,-16),])
check_model(modelER_adj)
#plot(modelER_adj)
summary(modelER_adj)

ER_Ca <- ggplot( df[c(-9,-16),], aes(y = (abs(nighttime_caco3_flux_mol_m2_d)), 
                                     x = (abs(er_mol_c_m2_d)))) +
  geom_errorbarh(aes(xmin = (abs(er_mol_c_m2_d)) - (er_mol_c_m2_d_sd),
                     xmax = (abs(er_mol_c_m2_d)) + (er_mol_c_m2_d_sd),
                     color = stream), width = 0.03, height = 0.04, alpha =.4, lwd = .7) +
  geom_errorbar(aes(ymin = (abs(nighttime_caco3_flux_mol_m2_d)) - (nighttime_caco3_flux_mol_m2_d_sd),
                    ymax = (abs(nighttime_caco3_flux_mol_m2_d)) + (nighttime_caco3_flux_mol_m2_d_sd),
                    color = stream), width = 0.03, height = 0.09, alpha =.4, lwd = .7) +
  geom_abline(slope = 0.7029, intercept = 0.12147, linetype = "solid", lwd = 1) + 
  geom_point(aes(colour = stream, shape = stream, fill = stream),
             size = 4, stroke = 1.5, alpha = .7) +
  labs(title = "c") +
  stat_regline_equation(aes(label = paste("y == 0.12 + 0.7 * x", "~~", "R^2 == 0.85")), parse = TRUE) +  # Corrected equation format
  scale_shape_manual(values = c(21:24)) +
  scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill")) +
  scale_y_log10(name = expression(Dissolution~rates~(mol~CaCO[3]~m^{"-2"}~d^{"-1"}))) +
  scale_x_log10(name = expression("|"~Ecosystem~Respiration~"|"~(mol~C~m^{"-2"}~d^{"-1"}))) +
  theme_cowplot(font_size = 16, line_size = .5) + 
  theme(legend.position = 'none')+
  panel_border(color = "black", size = 1) +
  update_geom_defaults("text", list(size = 5))

ER_Ca


# Model excluding additional sensitive points using absolute values
modelER_Caa <- lm(log10((grams_to_mol(abs(nighttime_ca_standing_stock_g_m2)))) ~ log10((er_mol_c_m2_d)), df)

check_model(modelER_Caa)
#plot(modelER_adj)
summary(modelER_Caa)

ER_Caa <- ggplot(df, aes(y = abs(grams_to_mol(nighttime_ca_standing_stock_g_m2)), 
                         x = abs(er_mol_c_m2_d))) +
  geom_errorbarh(aes(xmin = abs(er_mol_c_m2_d) - er_mol_c_m2_d_sd,
                     xmax = abs(er_mol_c_m2_d) + er_mol_c_m2_d_sd,
                     color = stream), width = 0.03, height = 0.02, alpha = .4, lwd = .7) +
  geom_errorbar(aes(ymin = abs(grams_to_mol(nighttime_ca_standing_stock_g_m2)) - grams_to_mol(nighttime_ca_standing_stock_g_m2_sd),
                    ymax = abs(grams_to_mol(nighttime_ca_standing_stock_g_m2)) + grams_to_mol(nighttime_ca_standing_stock_g_m2_sd),
                    color = stream), width = 0.03, height = 0.09, alpha = .4, lwd = .7) +
  geom_abline(slope = 0.5, intercept = 0.42, linetype = "solid", lwd = 1) + 
  geom_point(aes(colour = stream, shape = stream, fill = stream),
             size = 4, stroke = 1.5, alpha = .7) +
  labs(title = "d") +
  stat_regline_equation(aes(label = paste("y == 0.42 + 0.5 * x", "~~", "R^2 == 0.83")), parse = TRUE) +
  scale_shape_manual(values = c(21:24)) +
  scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill")) +
  scale_y_log10(name = expression(Stock~of~Calcium[~nighttime]~(mol~Ca^{"2+"}~m^{"-2"}))) +
  scale_x_log10(name = expression("|"~Ecosystem~Respiration~"|"~(mol~C~m^{"-2"}~d^{"-1"}))) +
  theme_cowplot(font_size = 16, line_size = .5) + 
  theme(legend.position = 'none') +
  panel_border(color = "black", size = 1) +
  update_geom_defaults("text", list(size = 5))

ER_Caa

#---- Net ecosystem production effect on Ca flux -----

# Model excluding additional sensitive points using absolute values
nep_model <- lm(asinh(net_caco3_mol_m2_d) ~ asinh(nep_mol_c_m2_d))
check_model(nep_model)

#plot(modelER_adj)
summary(molar_model)

NEP_NET <-ggplot(df, aes(y = ((net_caco3_mol_m2_d)), 
                         x = ((nep_mol_c_m2_d)))) +
  geom_vline(xintercept = 0, linetype = "dashed", lwd = .8) +
  geom_hline(yintercept = 0, linetype = "dashed", lwd = .8) +
  geom_point(aes(colour = stream, shape = stream, fill = stream),
             size = 4, stroke = 1.5, alpha = .7) +
  labs(title = "e") +
  scale_shape_manual(values = c(21:24)) +
  scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill"))  +
  scale_y_continuous(name = expression(Net~travertine~formation~(mol~CaCO[3]~m^{"-2"}~d^{"-1"}))) +
  scale_x_continuous(name = expression(Net~ecosystem~production~(mol~C~m^{"-2"}~d^{"-1"})))+
  theme_cowplot(font_size = 16, line_size = .5) + 
  theme(legend.position = "none") + 
  panel_border(color = "black", size = 1)

NEP_NET


MeanCaa_model_asinh_mmol <- lm(
  asinh(grams_to_mol(mean_standing_stock_g_m2)*1000) ~ asinh(nep_mol_c_m2_d*1000),
  data = df[c(-4, -17), ]
)

check_model(MeanCaa_model_asinh_mmol)
summary(MeanCaa_model_asinh_mmol)

NEP_NET_Caa<-ggplot(df[c(-4,-17),], aes(y =(grams_to_mol(mean_standing_stock_g_m2)*1000), 
                                        x = (nep_mol_c_m2_d*1000))) +
  geom_abline(slope = -0.50877, intercept = 4.10596, lwd = 1) +
  geom_point(aes(colour = stream, shape = stream, fill = stream),
             size = 4, stroke = 1.5, alpha = .7) +
  scale_shape_manual(values = c(21:24)) +
  scale_color_brewer(palette = "Dark2", aesthetics = c("colour", "fill"))  +
  scale_x_continuous(
    trans = asinh_trans(),
    limits = c(-1500, -10),
    breaks = c(-1500, -500, -250, -100, -10),
    name = expression(Net~ecosystem~production~(mmol~C~m^{"-2"}~day^{"-1"}))
  ) +
  scale_y_continuous(
    trans = asinh_trans(),
    limits = c(100, 1500),
    breaks = c(100, 250, 550, 1000, 1500),
    name = expression(Mean~calcium~accrual~(mmol~Ca^{"2+"}~m^{"-2"}))
  ) +
  stat_regline_equation(label.y = 6, label.x = -8,
                        aes(label = paste("y == 4.1 -0.5 * x", "~~", "R^2 == 0.83")), parse = TRUE) +
  labs(title = "f") +
  theme_cowplot(font_size = 16, line_size = .5) + 
  theme(legend.position = "none") +
  panel_border(color = "black", size = 1)

NEP_NET_Caa

## Merging all the figures in a single one. That's the ultimate fiugure of the manuscript


combined_plot <- gridExtra::grid.arrange(GPP_Ca, GPP_Caa, ER_Ca, ER_Caa, NEP_NET, NEP_NET_Caa ,ncol = 3)

ggsave(plot = combined_plot, filename = './figs/Figure4.tiff', width = 16, height = 10, dpi = 300)

# Function to extract and format model summaries
extract_model_summary <- function(model, model_name, predictor_transformation) {
  # Extract coefficients using broom::tidy
  coef_df <- tidy(model)
  
  # Add R-squared, F-statistic, and other metrics from glance
  model_summary <- glance(model)
  
  # Format p-values
  coef_df$p.value <- ifelse(coef_df$p.value < 0.05, "p < 0.05", format(round(coef_df$p.value, 4), scientific = FALSE))
  
  # Extract intercept and slope rows
  intercept_row <- coef_df %>% filter(term == "(Intercept)")
  slope_row <- coef_df %>% filter(term != "(Intercept)")
  
  # Extract predictor variable name from model formula
  predictor_name <- all.vars(formula(model))[2]
  
  # Combine coefficients and model statistics
  summary_df <- data.frame(
    Model = model_name,
    Predictor = predictor_name,
    Transformation = predictor_transformation,
    
    Intercept = round(intercept_row$estimate, 4),
    `Intercept Std. Error` = round(intercept_row$std.error, 4),
    `Intercept t value` = round(intercept_row$statistic, 4),
    `Intercept p value` = intercept_row$p.value,
    
    Slope = round(slope_row$estimate, 4),
    `Slope Std. Error` = round(slope_row$std.error, 4),
    `Slope t value` = round(slope_row$statistic, 4),
    `Slope p value` = slope_row$p.value,
    
    R2 = round(model_summary$r.squared, 2),
    `F-statistic` = round(model_summary$statistic, 4),
    `df` = paste(model_summary$df.residual),
    Residuals = round(model_summary$sigma, 4)
  )
  
  return(summary_df)
}

# List of models
models <- list(
  modelGPP_all_molar,   # log10-log10
  modelGPP_caa,         # log10-log10
  modelER_adj,          # log10-log10
  modelER_Caa,          # log10-log10
  molar_model,          # asinh-asinh
  MeanCaa_model_asinh_mmol       # log10-log10
)

# Descriptive model names
model_names <- c(
  "Deposition rates",
  "Daytime calcium accrual",
  "Dissolution rates",
  "Nighttime calcium accrual",
  "Net travertine formation",
  "Mean calcium accrual")

# Specify transformations used on the predictor variable in each model
transformations <- c(
  "log10(GPP)",
  "log10(GPP)",
  "log10(ER)",
  "log10(ER)",
  "asinh(GPP)",
  "log10(GPP)"
)

# Combine all into summary table
library(broom)
summary_list <- do.call(
  rbind,
  mapply(extract_model_summary, models, model_names, transformations, SIMPLIFY = FALSE)
)

# Print to console
print(summary_list)

# Save to Excel
library(openxlsx)

write.xlsx(summary_list, file = "./results/StreamMetabolism_Influence_Travertine_LMs_summaries.xlsx", sheetName = "All Models")
